# Neopixel Andon Configuration
# by Josh DeWitt (Dotdash32)



##### Configuration block #####

[neopixel andon]
pin: PA8
chain_count: 7
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.5
initial_BLUE: 0.0
# initial_WHITE: 0.0

#### Module Level Variables ####
[gcode_macro andonvars]
variable_red: 0.0
variable_green: 0.0
variable_blue: 0.0
variable_base_red: 0.25
variable_base_green: 0.5
variable_base_blue: 0.125
variable_enabled: 1
variable_counter: 0 #how many phases to display for startup gCode
gcode:

### Write to LED ###
# [gcode_macro _write_andon]
# gcode:
#     # import current settings
#     {% set DISP_RED = printer["gcode_macro andonvars"].red|float %}
#     {% set DISP_GREEN = printer["gcode_macro andonvars"].green %}
#     {% set DISP_BLUE = printer["gcode_macro andonvars"].blue %}

#     #is the LED on?  should we display actual values, or not?
#     {% if printer["gcode_macro andonvars"].enabled == 1 %}
#         _SET_LED LED=andon RED={DISP_RED} GREEN={DISP_GREEN} BLUE={DISP_BLUE}
#     {% else %}
#         _SET_LED LED=andon RED=0.0 BLUE=0.0 GREEN=0.0
#     {% endif %}

## Turn andon on and off in software ##
[gcode_macro toggle_andon]
gcode:
    {% if printer["gcode_macro andonvars"].enabled == 1 %}
        SET_GCODE_VARIABLE MACRO=andonvars VARIABLE=enabled VALUE=0
        # {% set printer["gcode_macro andon_vars"].toggledON = 0 %}
    {% else %}
        SET_GCODE_VARIABLE MACRO=andonvars VARIABLE=enabled VALUE=1
        # {% set printer["gcode_macro andon_vars"].toggledON = 1 %}
    {% endif %}

    # update the andon with our new settings
    # _write_andon
    SET_LED LED=andon MODE=internal

## Set Andon color internally ##
# [gcode_macro SET_LED]
# rename_existing: _SET_LED
# gcode:
#     # is this an external or internal command
#     {% set mode = params.MODE|default("external") %}

#     #pull which led it's operating on
#     {% set whichLED = params.LED|default("None") %} 

#     # are we operating on our andon boy?
#     {% if whichLED == "andon" %}
#         {% if mode == "external" %} #we have new values to write
#             #pull in the parameters
#             {% set S_RED = params.RED|default(0.0)|float %}
#             {% set S_GREEN = params.GREEN|default(0.0)|float %}
#             {% set S_BLUE = params.BLUE|default(0.0)|float %}
#             #save them internally
#             SET_GCODE_VARIABLE MACRO=andonvars VARIABLE=red VALUE={S_RED}
#             SET_GCODE_VARIABLE MACRO=andonvars VARIABLE=green VALUE={S_GREEN}
#             SET_GCODE_VARIABLE MACRO=andonvars VARIABLE=blue VALUE={S_BLUE}
#         {% elif mode == "internal" %}
#             # import current settings from module variables
#         {% endif %}
#         {% set D_RED = printer["gcode_macro andonvars"].red|float %}
#         {% set D_GREEN = printer["gcode_macro andonvars"].green|float %}
#         {% set D_BLUE = printer["gcode_macro andonvars"].blue|float %}

#         # write to the led
#         ECHO ENABLED={printer["gcode_macro andonvars"].enabled}
#         ECHO RED={D_RED} GREEN={D_GREEN} BLUE={D_BLUE}

#         #is the LED on?  should we display actual values, or not?
#         {% if printer["gcode_macro andonvars"].enabled == 1 %}
#             _SET_LED LED=andon RED={D_RED} GREEN={D_GREEN} BLUE={D_BLUE}
#         {% else %}
#             _SET_LED LED=andon RED=0.0 BLUE=0.0 GREEN=0.0
#         {% endif %}
#         # _write_andon
#     {% else %}
#         _SET_LED LED={whichLED} RED={D_RED} GREEN={D_GREEN} BLUE={D_BLUE}
#     {% endif %}


[delayed_gcode andon_startup_welcome]
# description: Run through color change at bootup
initial_duration: 1.0
gcode:
    {% set brightness = 0.5 %} #parameters.B|default(0.5)|float %}
    {% set repeat_time = 1.0 %} #printer["delayed_gcode"].initial_duration|int %}
    {% set phase_num = printer["gcode_macro andonvars"].counter %}
    {% set DISP_RED = printer["gcode_macro andonvars"].base_red|float %}
    {% set DISP_GREEN = printer["gcode_macro andonvars"].base_green|float %}
    {% set DISP_BLUE = printer["gcode_macro andonvars"].base_blue|float %}
    
    {% set phases = [
        'RED=%.2f'   % brightness,
        'GREEN=%.2f' % brightness,
        'BLUE=%.2f'  % brightness,
        'RED=%.4f GREEN=%.4f BLUE=%.4f' % (DISP_RED, DISP_GREEN, DISP_BLUE),
    ] %}
    ECHO PHASE={phase_num}
    
    SET_LED LED=andon {phases[phase_num]}
    SET_GCODE_VARIABLE MACRO=andonvars VARIABLE=counter VALUE={phase_num + 1 if phase_num < phases|length - 1 else 0}
    
    {% if phase_num < phases|length - 1 %}
        UPDATE_DELAYED_GCODE ID=andon_startup_welcome DURATION={repeat_time}  # reschedule
    {% endif %}