# Neopixel Andon Configuration
# by Josh DeWitt (Dotdash32)



##### Configuration block #####

[neopixel andon]
pin: PA8
chain_count: 7
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
# initial_WHITE: 0.0

#### Module Level Variables ####
[gcode_macro _andonvars]
variable_enabled: 1
variable_led_name: "andon"
variable_current_color: (0.0, 0.0,0.0)
variable_base_color: (0.25, 0.5, 0.125)
variable_welcome_phase_delay: 1
variable_welcome_phase_colors: [
        (0.5, 0, 0),
        (0, 0.5, 0),
        (0, 0, 0.5),
    ]
variable_welcome_phase_num: 0  # keep track of current welcome phase
gcode:


## Turn andon on and off in software ##
[gcode_macro toggle_andon]
gcode:
    {% if printer["gcode_macro _andonvars"].enabled == 1 %}
        SET_GCODE_VARIABLE MACRO=_andonvars VARIABLE=enabled VALUE=0
        # ECHO ANDON_DISABLED=0
    {% else %}
        SET_GCODE_VARIABLE MACRO=_andonvars VARIABLE=enabled VALUE=1
        # ECHO ANDON_ENABLED=1
    {% endif %}

    # update the andon with our new settings
    SET_LED LED=andon MODE=internal

### Set Andon color internally ###
[gcode_macro SET_LED]
rename_existing: SET_LED_BASE
gcode:
    # is this an external or internal command
    {% set mode = params.MODE|default("external") %}

    #pull which led it's operating on
    {% set whichLED = params.LED|default("None") %} 
    
    #get andon specific variables
    {% set vars = printer["gcode_macro _andonvars"] %}

    # are we operating on our andon boy?
    {% if whichLED == "andon" %}
        {% if mode == "external" %} #we have new values to write
            #pull in the parameters
            {% set S_RED = params.RED|default(0.0)|float %}
            {% set S_GREEN = params.GREEN|default(0.0)|float %}
            {% set S_BLUE = params.BLUE|default(0.0)|float %}
            {% set d_colors = (S_RED, S_GREEN, S_BLUE) %}
            #save them internally
            SET_GCODE_VARIABLE MACRO=_andonvars VARIABLE=current_color VALUE='{d_colors}'
            # SET_GCODE_VARIABLE MACRO=_andonvars VARIABLE=green VALUE={D_GREEN}
            # SET_GCODE_VARIABLE MACRO=_andonvars VARIABLE=blue VALUE={D_BLUE}
        {% elif mode == "internal" %}
            # import current settings from module variables
            {% set d_colors = vars.current_color %}
        {% endif %}

        #### DEBUG: did we actually hit the right state? ###
        # ECHO ENABLED={printer["gcode_macro _andonvars"].enabled}
        # ECHO COLORS='{d_colors}'

        # write to the led
        #is the LED on?  should we display actual values, or not?.
        {% if printer["gcode_macro _andonvars"].enabled == 1 %}
            SET_LED_BASE LED={vars.led_name} {'RED=%.4f GREEN=%.4f BLUE=%.4f' % d_colors}
        {% else %}
            SET_LED_BASE LED={vars.led_name} RED=0.0 BLUE=0.0 GREEN=0.0
        {% endif %}
    {% else %}
        SET_LED_BASE {rawparams}
    {% endif %}


[delayed_gcode andon_startup_welcome]
# description: Run through color change at bootup
initial_duration: 1.0
gcode:
    {% set vars = printer["gcode_macro _andonvars"] %}
    {% set not_last = vars.welcome_phase_num < vars.welcome_phase_colors|length %}
    
    {% set colorsToSend = vars.welcome_phase_colors[vars.welcome_phase_num] if not_last else vars.base_color %}
    # ECHO prePhase={vars.welcome_phase_num}, colors="{colorsToSend}"
    SET_LED LED={vars.led_name} {'RED=%.2f GREEN=%.2f BLUE=%.2f' % colorsToSend}
    SET_GCODE_VARIABLE MACRO=_andonvars VARIABLE=welcome_phase_num VALUE={vars.welcome_phase_num + 1 if not_last else 0}
    # ECHO postPhase={vars.welcome_phase_num}
    
    {% if not_last %}
        UPDATE_DELAYED_GCODE ID=andon_startup_welcome DURATION={vars.welcome_phase_delay}  # reschedule
    {% endif %}